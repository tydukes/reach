{
  "name": "REACH Development Container",
  "build": {
    "dockerfile": "Dockerfile",
    "context": ".."
  },

  // Configure tool-specific properties
  "customizations": {
    "vscode": {
      // VSCode extensions to install
      "extensions": [
        // TypeScript
        "dbaeumer.vscode-eslint",
        "esbenp.prettier-vscode",
        "ms-vscode.vscode-typescript-next",

        // Git
        "eamodio.gitlens",
        "github.vscode-pull-request-github",

        // Markdown
        "yzhang.markdown-all-in-one",

        // Docker
        "ms-azuretools.vscode-docker",

        // Accessibility
        // Note: vscode-axe-linter may not work on ARM64 (Apple Silicon) due to x86-64 dependencies
        // If you see Rosetta errors, disable this extension in the container
        // Alternative: Use browser-based axe DevTools or pa11y-ci for accessibility testing
        "deque-systems.vscode-axe-linter",

        // General utilities
        "streetsidesoftware.code-spell-checker",
        "editorconfig.editorconfig"
      ],

      // VSCode settings
      "settings": {
        "editor.formatOnSave": true,
        "editor.defaultFormatter": "esbenp.prettier-vscode",
        "editor.codeActionsOnSave": {
          "source.fixAll.eslint": "explicit"
        },
        "typescript.tsdk": "node_modules/typescript/lib",
        "typescript.enablePromptUseWorkspaceTsdk": true,
        "files.eol": "\n",
        "files.insertFinalNewline": true,
        "files.trimTrailingWhitespace": true,
        "[markdown]": {
          "files.trimTrailingWhitespace": false
        },
        "npm.enableRunFromFolder": true,
        "accessibility.signals.terminalBell": {
          "sound": "on"
        }
      }
    }
  },

  // Forward ports for future services
  "forwardPorts": [3000, 5173, 8080],

  // Use 'postCreateCommand' to run commands after the container is created
  "postCreateCommand": "npm install",

  // Use 'postStartCommand' to run commands after the container starts
  "postStartCommand": "git config --global --add safe.directory ${containerWorkspaceFolder}",

  // Configure container features
  "features": {
    "ghcr.io/devcontainers/features/common-utils:2": {
      "installZsh": true,
      "installOhMyZsh": true,
      "upgradePackages": true,
      "username": "node",
      "userUid": "1000",
      "userGid": "1000"
    },
    "ghcr.io/devcontainers/features/git:1": {
      "version": "latest",
      "ppa": true
    },
    "ghcr.io/anthropics/devcontainer-features/claude-code:1": {}
  },

  // Set container user
  "remoteUser": "node",

  // Configure mounts
  "mounts": [
    "source=/var/run/docker.sock,target=/var/run/docker-host.sock,type=bind",
    "source=${localEnv:HOME}/.ssh,target=/home/node/.ssh,readonly,type=bind"
  ],

  // Environment variables
  "remoteEnv": {
    "NODE_ENV": "development",
    "NPM_CONFIG_UPDATE_NOTIFIER": "false"
  }
}
